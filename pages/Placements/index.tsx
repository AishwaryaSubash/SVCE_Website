import React, { useState } from "react";
import { Bar } from "react-chartjs-2";
import SideBar from "../../components/SideBar";
import VisibilitySensor from "react-visibility-sensor";
import { Statistics as s } from "../../Placement";
// import CountUp from "react-countup";
import styles from "./Placements.module.scss";
import cn from "classnames";
import Head from "next/head";
import { useMediaQuery } from "@mui/material";
import { motion } from "framer-motion";
import dynamic from "next/dynamic";
import { Chart, BarElement, CategoryScale, LinearScale } from "chart.js";
import FloatingBackButton from "../../components/FloatingBackButton";
Chart.register(CategoryScale, LinearScale, BarElement);
const CountUp = dynamic(() => import("react-countup"), {
  ssr: false,
});
const Background = dynamic(() => import("../../components/Background"), {
  ssr: false,
});
const Placements = ({ select }: { select: number }) => {
  const [viewPortEntered, setViewPortEntered] = useState(false);
  const showSideBar = useMediaQuery("(max-width:600px)");
  const [isOpen, setIsOpen] = useState(false);
  const data = {
    labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
    datasets: [
      {
        label: "# of Votes",
        data: [99, 49, 37, 56, 23, 33],
        backgroundColor: [
          "rgba(255, 99, 132, 0.2)",
          "rgba(54, 162, 235, 0.2)",
          "rgba(255, 206, 86, 0.2)",
          "rgba(75, 192, 192, 0.2)",
          "rgba(153, 102, 255, 0.2)",
          "rgba(255, 159, 64, 0.2)",
        ],
        borderColor: [
          "rgba(255, 99, 132, 1)",
          "rgba(54, 162, 235, 1)",
          "rgba(255, 206, 86, 1)",
          "rgba(75, 192, 192, 1)",
          "rgba(153, 102, 255, 1)",
          "rgba(255, 159, 64, 1)",
        ],
        borderWidth: 1,
      },
    ],
  };
  const opt = {
    animations: {
      tension: {
        duration: 1200,
        easing: "linear",
        from: 1,
        to: 0,
        loop: true,
      },
    },
    scales: {
      y: {
        min: 0,
        max: 100,
      },
    },
  };
  return (
    <div className={styles.desktop}>
      <div className={styles.bg}>
        <Background />
      </div>
      <div className={styles.container}>
        <Head>
          <title>Sri Venkateswara College of Engineering</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className={styles.sideBar}>
          <SideBar />
        </div>
        {!showSideBar && <div className={styles.emptyForAReason}></div>}
        <div className={styles.innerContainer}>
          <div className={styles.mainContainer}>
            <div className={styles.textContainer}>
              <div className={styles.content}>
                {/* <motion.div
                layout
                data-isOpen={isOpen}
                initial={{ borderRadius: 25 }}
                className={styles.parent}
                onClick={() => setIsOpen(!isOpen)}
              >
                <motion.div layout className={styles.child} />
              </motion.div>
              <motion.div> */}
                <div className={styles.graph}>
                  <Bar data={data} width={400} height={200} />
                </div>
                <div className={styles.heading}>Placement Cell in SVCE</div>
                <div className={styles.text}>
                  The Placement cell is one of the important department in SVCE.
                  Knowing that you will be guided after your graduation so that
                  you land a job helps you feel secure. This is the reason why
                  we have a dedicated placement cell that helps, guides, and
                  advises students about the future. In SVCE, students come from
                  all walks of lives. They come from different parts of the
                  country including rural areas. Some individuals may not be
                  aware of how things work. Some others may not be confident
                  enough to walk into an interview even though they are skilled.
                  These problems are more common and our skilled placement panel
                  are helping students to get placed in top companies.
                </div>
                {/* </motion.div> */}
                <div className={styles.heading}>Training</div>
                <div className={styles.text}>
                  Placement training plays a major role in shaping up the career
                  goals of students. It is the dream of every engineering
                  student to get placed in a top organization visiting their
                  campus for recruitment. Keeping this key aspect into
                  consideration, it is realized that training is important for
                  engineering students to enhance their employability skills and
                  achieve good placement in various Industries.
                </div>
                <div className={styles.heading}>
                  Office of Training and Placement
                </div>
                <div className={styles.people}>
                  <div className={styles.p1}>
                    <div className={styles.t1}>Chief Placement Officer</div>
                    Prof. S. Muraleedharan, MS, MBA
                  </div>
                  <div className={styles.p2}>
                    <div className={styles.t2}>Assistant Placement Officer</div>
                    Mr. E. Ramachandiran, M.Tech.
                  </div>
                  <div className={styles.p3}>
                    <div className={styles.t3}>Assistant Placement Officer</div>
                    Mr. A. K. Boobalasenthilraj, M.E., Ph.D.
                  </div>
                  <div className={styles.p4}>
                    <div className={styles.t4}>Junior Assistant</div>
                    Mr. D. Pugazharasu, M.A., MCA.
                  </div>
                </div>
              </div>
            </div>
            <div className={styles.statscontainer}>
              <div className={styles.stathead}>Statistics</div>

              <div className={styles.stats}>
                {s.map((s, i) => {
                  return (
                    <motion.div
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      whileHover={{ scale: 1.1 }}
                      transition={{ delay: 0.01, duration: 1 }}
                      key={i}
                      className={cn({
                        [styles.stats1]: s.id === 1,
                        [styles.stats2]: s.id === 2,
                        [styles.stats3]: s.id === 3,
                        [styles.stats4]: s.id === 4,
                        [styles.stats5]: s.id === 5,
                        [styles.stats6]: s.id === 6,
                        [styles.stats7]: s.id === 7,
                        [styles.stats8]: s.id === 8,
                        [styles.stats9]: s.id === 9,
                      })}
                    >
                      <motion.div
                        initial={
                          s.id === 1
                            ? { opacity: 0, y: -80 }
                            : s.id === 2
                            ? { opacity: 0, x: -60 }
                            : s.id === 3
                            ? { opacity: 0, x: 80 }
                            : s.id === 4
                            ? { opacity: 0, x: -80 }
                            : s.id === 5
                            ? { opacity: 0, x: 80 }
                            : s.id === 6
                            ? { opacity: 0, y: 90 }
                            : s.id === 7
                            ? { opacity: 0, x: -120 }
                            : s.id === 8
                            ? { opacity: 0, x: 80 }
                            : s.id === 9
                            ? { opacity: 0, y: 80 }
                            : { opacity: 0 }
                        }
                        animate={{ opacity: 1, x: 0, y: 0 }}
                        transition={{ delay: 0.01, duration: 3 }}
                        className={cn({
                          [styles.s1]: s.id === 1,
                          [styles.s2]: s.id === 2,
                          [styles.s3]: s.id === 3,
                          [styles.s4]: s.id === 4,
                          [styles.s5]: s.id === 5,
                          [styles.s6]: s.id === 6,
                          [styles.s7]: s.id === 7,
                          [styles.s8]: s.id === 8,
                          [styles.s9]: s.id === 9,
                        })}
                      >
                        {s.name}

                        <CountUp start={viewPortEntered ? 0 : 0} end={100}>
                          {({ countUpRef }) => {
                            return (
                              <VisibilitySensor
                                active={!viewPortEntered}
                                onChange={(isVisible: any) => {
                                  if (isVisible) {
                                    setViewPortEntered(true);
                                  }
                                }}
                                delayedCall
                              >
                                <span ref={countUpRef}></span>
                              </VisibilitySensor>
                            );
                          }}
                        </CountUp>

                        <CountUp
                          start={0}
                          end={s.count}
                          delay={0}
                          duration={3}
                          decimals={s.id == 8 ? 2 : 0}
                          suffix={s.id == 8 ? "%" : ""}
                          onStart={() => console.log("hi")}
                          preserveValue={false}
                        >
                          {({ countUpRef }) => (
                            <div>
                              <span ref={countUpRef}></span>
                            </div>
                          )}
                        </CountUp>
                      </motion.div>
                    </motion.div>
                  );
                })}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className={styles.floatingButton}>
        <FloatingBackButton />
      </div>
    </div>
  );
};

export default Placements;
